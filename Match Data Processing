import csv
import pandas
import matplotlib.pyplot as plt

import plotly.express as px
import plotly.figure_factory as ff
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import plotly.figure_factory as ff

DATA=[]

EQUIPES=[]
SCORES=[]

SCOREnbWIN=[]

#ANNE=['2009','2010','2011','2012','2013','2014','2015']
ANNE=[]

dic={
    'Année' : [],
    'Equipes' : [],
    'SCOREnbWIN': []
}

f= open (r"ScoreEquipeNBA.csv")
myReader = csv.reader(f)
for row in myReader:
    #print(row)
    DATA.append(row)

def Trie(i):
    #print(i,DATA[i][4],DATA[i][5])
    if DATA[i][2] not in EQUIPES:
        EQUIPES.append(DATA[i][2])
        SCORES.append([])
        if int(DATA[i][4])>int(DATA[i][5]):
            SCORES[len(SCORES)-1].append("W") # SCORES[len(SCORES)-1].append("W")
        else:
            SCORES[len(SCORES)-1].append("L")
    else:
        if int(DATA[i][4])>int(DATA[i][5]):
            SCORES[EQUIPES.index(DATA[i][2])].append("W") # SCORES[len(SCORES)-1].append("W")
        else:
            SCORES[EQUIPES.index(DATA[i][2])].append("L")

    if DATA[i][3] not in EQUIPES:
        EQUIPES.append(DATA[i][3])
        SCORES.append([])
        if int(DATA[i][4])<int(DATA[i][5]):
            SCORES[len(SCORES)-1].append("W") # SCORES[len(SCORES)-1].append("W")
        else:
            SCORES[len(SCORES)-1].append("L")
    else:
        if int(DATA[i][4])<int(DATA[i][5]):
            SCORES[EQUIPES.index(DATA[i][3])].append("W") # SCORES[len(SCORES)-1].append("W")
        else:
            SCORES[EQUIPES.index(DATA[i][3])].append("L")


def MakeRatio():
    for i in range (len(SCORES)):
        compteur=0
        for ii in range (len(SCORES[i])):
            if SCORES[i][ii]=='W':
                compteur+=1

        SCOREnbWIN.append(round(compteur/len(SCORES[i])*100,2))

##
AnneActuel=DATA[1][1][0] + DATA[1][1][1] + DATA[1][1][2] +DATA[1][1][3]
dic['Année'].append(AnneActuel)
for i in range (1,len(DATA)):
    if "None" not in DATA[i]:
        if (DATA[i][1][0] + DATA[i][1][1] + DATA[i][1][2] +DATA[i][1][3]!=AnneActuel): #DATA[i][1][0] + DATA[i][1][1] + DATA[i][1][2] +DATA[i][1][3] not in ANNE
            MakeRatio()

            dic['Année'].append(DATA[i][1][0] + DATA[i][1][1] + DATA[i][1][2] +DATA[i][1][3])
            dic['Equipes'].append(EQUIPES)
            dic['SCOREnbWIN'].append(SCOREnbWIN)


            ANNE.append(DATA[i][1][0] + DATA[i][1][1] + DATA[i][1][2] +DATA[i][1][3])

            EQUIPES=[]
            SCOREnbWIN=[]
            SCORES=[]
            AnneActuel=DATA[i][1][0] + DATA[i][1][1] + DATA[i][1][2] +DATA[i][1][3]


        Trie(i)



        #ANNE(len(ANNE)-1).append(EQUIPES)
        #ANNE(len(ANNE)-1).append(SCORES)










print(dic)





EquipeScoreAnne=[]
EquipeSauv=[]

equipeactuel=""


ar = []


for i in range (len(dic['Equipes'])):
    for ii in range (len(dic['Equipes'][i])):#dic['Equipes'][i][ii])
        if dic['Equipes'][i][ii] not in EquipeSauv:
            EquipeSauv.append(dic['Equipes'][i][ii])
            equipeactuel=dic['Equipes'][i][ii]

            for iii in range (len(dic['Equipes'])):
                if equipeactuel in dic['Equipes'][iii]:
                    pos=dic['Equipes'][iii].index(equipeactuel)
                    EquipeScoreAnne.append( dic['SCOREnbWIN'][iii][ pos ]   )
                else:
                    EquipeScoreAnne.append(-1)
                #print(pos)


            ar.append(EquipeScoreAnne)
            EquipeScoreAnne=[]
            #print("ar+", ar)




print(EquipeScoreAnne)










df = pandas.DataFrame(ar)
df = df.transpose()


dates  = 2009+df.index




fig = go.Figure()
for i in range(len(df.columns)):
    x = dates
    y = df[df.columns[i]]

    fig.add_trace(go.Scatter(
        y=y, x=x,
        #opacity=0.1 if i not in [0,25,14,18] else 1,
        name=EquipeSauv[int(i)],
        visible='legendonly'))

    fig.update_layout(
        yaxis_title='% victoires',
        xaxis_title='année',
        title='Evolution du pourcentage de victoire dans le temps',
        legend_title_text='Equipes',

    )


print(df)
fig.show()




#désactiver la legende clicable
#prendre les bonne données pas celle doublé







